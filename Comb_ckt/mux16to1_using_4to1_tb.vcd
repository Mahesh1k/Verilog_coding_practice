$date
	Sun Jun 08 12:49:16 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mux16to1_using_4to1_tb $end
$var wire 1 ! C $end
$var reg 16 " A [15:0] $end
$var reg 4 # B [3:0] $end
$scope module DUT $end
$var wire 16 $ in [15:0] $end
$var wire 4 % sel [3:0] $end
$var wire 4 & t [3:0] $end
$var wire 1 ! out $end
$scope module m1 $end
$var wire 4 ' in [3:0] $end
$var wire 2 ( sel [1:0] $end
$var wire 1 ) out $end
$upscope $end
$scope module m2 $end
$var wire 4 * in [3:0] $end
$var wire 2 + sel [1:0] $end
$var wire 1 , out $end
$upscope $end
$scope module m3 $end
$var wire 4 - in [3:0] $end
$var wire 2 . sel [1:0] $end
$var wire 1 / out $end
$upscope $end
$scope module m4 $end
$var wire 4 0 in [3:0] $end
$var wire 2 1 sel [1:0] $end
$var wire 1 2 out $end
$upscope $end
$scope module m5 $end
$var wire 4 3 in [3:0] $end
$var wire 2 4 sel [1:0] $end
$var wire 1 ! out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 4
bx 3
x2
bx 1
bx 0
x/
bx .
bx -
x,
bx +
bx *
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#5000
b1 '
b11 *
b1111 -
b0 0
b111100110001 "
b111100110001 $
#10000
0!
0)
b10 (
0,
b10 +
1/
b10 .
b100 &
b100 3
02
b10 1
b0 4
b10 #
b10 %
#15000
b1 (
1!
b110 &
b110 3
1,
b1 +
b1 .
b1 1
b1 4
b101 #
b101 %
#20000
b10 (
0!
b100 &
b100 3
0,
b10 +
b10 .
b10 1
b110 #
b110 %
#30000
